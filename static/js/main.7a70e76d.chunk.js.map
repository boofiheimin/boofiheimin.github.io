{"version":3,"sources":["i18n.js","components/PPButton/index.js","components/PPButton/PPButton.js","constants.js","components/PPCongrats/CornerButtons/CreditModal/CreditModal.js","components/PPCongrats/CornerButtons/CreditModal/index.js","components/PPCongrats/CornerButtons/PPLingo/PPLingo.js","components/PPCongrats/CornerButtons/PPLingo/index.js","components/PPCongrats/CornerButtons/CornerButtons.js","components/PPCongrats/CornerButtons/index.js","components/PPCongrats/CongratulationsBody/CongratulationsBody.js","components/PPCongrats/CongratulationsBody/index.js","assets/images/hikawa.png","components/PPCongrats/PPCongrats.js","components/PPCongrats/index.js","containers/Main/PPCongrats/index.js","containers/Main/PPCongrats/PPCongratsContainer.js","components/PPresentation/DownloadDescription/DownloadDescription.js","components/PPresentation/DownloadDescription/index.js","components/PPresentation/DownloadButton/DownloadButton.js","components/PPresentation/DownloadButton/index.js","components/ShurikenSpinner/ShurikenSpinner.js","components/ShurikenSpinner/index.js","components/PPresentation/ResponsiveIframe/ResponsiveIframe.js","components/PPresentation/ResponsiveIframe/index.js","assets/images/bg2.jpg","components/PPresentation/PPresentation.js","components/PPresentation/index.js","containers/Main/PPresentation/index.js","containers/Main/PPresentation/PPresentationContainer.js","components/PPMessageBoard/DownloadButton/DownloadButton.js","components/PPMessageBoard/DownloadButton/index.js","components/PPMessageBoard/MessageItems/MessageItems.js","components/PPMessageBoard/MessageItems/index.js","assets/images/pptile.png","components/PPMessageBoard/PPMessageBoard.js","components/PPMessageBoard/index.js","containers/Main/PPMessageBoard/index.js","containers/Main/PPMessageBoard/PPMessageBoardContainer.js","components/PPBackToTop/PPBackToTop.js","components/PPBackToTop/index.js","containers/Main/PPBackToTop/index.js","containers/Main/PPBackToTop/PPBackToTopContainer.js","components/Footer/Footer.js","components/Footer/index.js","containers/Main/index.js","App.js","reportWebVitals.js","index.js"],"names":["languageOptions","en","ja","i18n","use","detector","backend","reactI18nextModule","init","fallbackLng","keySeparator","interpolation","escapeValue","react","wait","currentLanguage","value","language","PPButton","styled","button","backgroundColor","color","bordered","circular","hoverBackgroundColor","LIMIT","parseInt","process","COLOR","CreditButton","CreditCloseButton","CenteredModal","props","t","restProps","Modal","size","aria-labelledby","centered","Header","closeButton","Title","id","parse","Body","Divider","Footer","className","hoveredBackgroundColor","onClick","onHide","CreditModal","modalShow","modalOnClick","show","options","Object","entries","map","key","text","image","src","PPLingo","handleLanguageChange","Dropdown","as","labeled","onChange","CornerButtonsWrapper","div","CornerButtons","CongratulationsBodyContainer","CongratulationsBody","textAlign","Content","Subheader","window","open","focus","Icon","name","PPCongratsContainer","backgroundImg","PPCongrats","congratRef","ref","useRef","useState","setModalShow","useEffect","isMobile","current","style","backgroundAttachment","v","e","changeLanguage","DownloadDescriptionContainer","DownloadDescription","DownloadButtonContainer","DownloadButton","downloadRef","onDownloadClick","Image","SpinningShuriken","ShurikenSpinner","PPTframe","RContainer","RIframe","iframe","ResponsiveIframe","hideSpinner","loading","data-aos","title","onLoad","target","href","rel","PPresentationContainer","PPresentation","setLoading","classList","remove","offsetWidth","add","DownloadPNGButton","MessageItemContainer","breakpoints","default","1200","700","MessageItems","data","breakpointCols","columnClassName","i","a","b","message","user","Card","alt","wrapped","ui","Description","MessageBoardContainer","PPMessageBoard","hasMore","messageRef","fetchMore","Container","overflow","dataLength","length","next","loader","defaultProps","PPMessageBoardContainer","sheetRef","setData","offset","setOffset","setHasMore","doc","useMemo","GoogleSpreadsheet","useApiKey","loadInfo","sheetsById","getRows","limit","rows","fetchRows","BackToTopButton","PPBackToTop","returnToTop","bttRef","fitted","onscroll","mybutton","document","body","scrollTop","documentElement","display","FooterContainer","withNamespaces","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","AOS","ReactDOM","render","StrictMode","getElementById"],"mappings":"iiBAKaA,EAAkB,CAC7BC,GAAI,KACJC,GAAI,gBAGNC,IACGC,IAAIC,KACJD,IAAIE,KACJF,IAAIG,KACJC,KAAK,CACJC,YAAa,KAEbC,cAAc,EAEdC,cAAe,CACbC,aAAa,GAEfC,MAAO,CACLC,MAAM,KAIZ,I,gCAMaC,EAAkB,WAC7B,OAPwBC,EAOAb,IAAKc,YANhBjB,EACJgB,EACK,KAHS,IAACA,GAUXb,IAAf,E,qFCnCee,ECAEC,IAAOC,OAAV,ydACQ,YAClB,OAD2C,EAAtBC,mBAId,YACP,OADsB,EAAZC,SAIF,YACR,OAD0B,EAAfC,SACO,kBAAoB,UAGvB,YACf,OADiC,EAAfC,SACA,MAAQ,YAOJ,YAClB,OADgD,EAA3BC,wBCnBvBC,EAAQC,SAASC,KAAqC,IAEtDC,EACQ,UADRA,EAEe,UAFfA,EAGK,UAHLA,EAIY,UAJZA,EAKK,UALLA,EAMY,UANZA,EAOC,UAPDA,EAQQ,U,eCLRC,EAAeX,YAAOD,EAAPC,CAAH,kIAOZY,EAAoBZ,YAAOD,EAAPC,CAAH,kGAMjBa,GAAgB,SAACC,GACrB,IAAQC,EAAoBD,EAApBC,EAAMC,EAAd,YAA4BF,EAA5B,GACA,OACE,eAACG,EAAA,EAAD,2BACMD,GADN,IAGEE,KAAK,KACLC,kBAAgB,gCAChBC,UAAQ,EALV,UAOE,cAACH,EAAA,EAAMI,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACL,EAAA,EAAMM,MAAP,CAAaC,GAAG,gCAAhB,SACGC,YAAMV,EAAE,eAGb,eAACE,EAAA,EAAMS,KAAP,WACE,mCAAMD,YAAMV,EAAE,0BACd,2HAIA,cAACY,EAAA,EAAD,IACA,mCAAMF,YAAMV,EAAE,mBACd,gJAKF,cAACE,EAAA,EAAMW,OAAP,UACE,cAAChB,EAAD,CACEiB,UAAU,sBACV3B,gBAAiBQ,EACjBoB,uBAAwBpB,EACxBP,MAAM,QACN4B,QAASjB,EAAMkB,OALjB,0BCjDOC,GD+DK,SAAC,GAAoC,IAAlClB,EAAiC,EAAjCA,EAAGmB,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aACnC,OACE,qCACE,cAACxB,EAAD,CACET,gBAAiB,gBACjBE,UAAQ,EACRD,MAAM,QACN4B,QAAS,kBAAMI,GAAa,IAJ9B,SAMGV,YAAMV,EAAE,aAGX,cAAC,GAAD,CACEqB,KAAMF,EACNF,OAAQ,kBAAMG,GAAa,IAC3BpB,EAAGA,Q,UE1ELsB,GAAUC,OAAOC,QAAQ1D,GAAiB2D,KAAI,mCAAEhB,EAAF,WAAiB,CACnEiB,IAAKjB,EACLkB,KAFkD,KAGlD7C,MAAO2B,EACPmB,MAAO,CAAEC,IAAI,IAAD,OAAMpB,EAAN,aCRCqB,GDWC,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,qBAAsBlD,EAAsB,EAAtBA,gBACvC,OACE,cAACmD,GAAA,EAAD,CACElB,UAAU,UACVmB,GAAIjD,EACJG,gBAAiB,gBACjBE,UAAQ,EACRD,MAAM,QACN8C,SAAO,EACPZ,QAASA,GACTxC,MAAOD,EACPsD,SAAUJ,KEnBVK,GAAuBnD,IAAOoD,IAAV,0QCHXC,GDiBO,SAAC,GAMhB,IALLtC,EAKI,EALJA,EACAmB,EAII,EAJJA,UACAC,EAGI,EAHJA,aACAW,EAEI,EAFJA,qBACAlD,EACI,EADJA,gBAEA,OACE,eAACuD,GAAD,WACE,cAAC,GAAD,CAAapC,EAAGA,EAAGmB,UAAWA,EAAWC,aAAcA,IACvD,cAAC,GAAD,CACEW,qBAAsBA,EACtBlD,gBAAiBA,Q,UEvBnB0D,GAA+BtD,IAAOoD,IAAV,m+DCNnBG,GDuGa,SAAC,GAAW,IAATxC,EAAQ,EAARA,EAC7B,OACE,eAACuC,GAAD,WACE,eAACjC,GAAA,EAAD,CAAQmC,UAAU,OAAlB,UACE,cAACnC,GAAA,EAAOoC,QAAR,CAAgBT,GAAG,KAAKnB,UAAW,uBAAnC,SACGJ,YAAMV,EAAE,qBAEX,cAACM,GAAA,EAAOqC,UAAR,CAAkB7B,UAAW,0BAA7B,SACGJ,YAAMV,EAAE,2BAGb,sBAAKc,UAAW,mBAAhB,UACE,eAAC,EAAD,CACE3B,gBAAiBQ,EACjBJ,qBAAsBI,EACtBP,MAAM,QACN4B,QAAS,WACP4B,OACGC,KACC,8EACA,UAEDC,SAVP,UAaE,cAACC,EAAA,EAAD,CAAMC,KAAK,YACVtC,YAAMV,EAAE,qBAEX,eAAC,EAAD,CACEb,gBAAiBQ,EACjBJ,qBAAsBI,EACtBP,MAAM,QACN4B,QAAS,WACP4B,OAAOC,KAAK,yBAA0B,UAAUC,SALpD,UAQE,cAACC,EAAA,EAAD,CAAMC,KAAK,YACVtC,YAAMV,EAAE,wBAGb,qBAAKc,UAAW,uBAAhB,SACGJ,YAAMV,EAAE,8BElJF,OAA0B,mCCUnCiD,GAAsBhE,IAAOoD,IAAV,o5BAQCa,IChBXC,GDmDI,SAAC,GAOb,IANLnD,EAMI,EANJA,EACAoD,EAKI,EALJA,WACAjC,EAII,EAJJA,UACAC,EAGI,EAHJA,aACAW,EAEI,EAFJA,qBACAlD,EACI,EADJA,gBAEA,OACE,eAAC,GAAD,CAAqBwE,IAAKD,EAA1B,UACE,cAAC,GAAD,CACEpD,EAAGA,EACHmB,UAAWA,EACXC,aAAcA,EACdW,qBAAsBA,EACtBlD,gBAAiBA,IAEnB,cAAC,GAAD,CAAqBmB,EAAGA,IACxB,sBAAKc,UAAW,qBAAhB,UACE,cAACiC,EAAA,EAAD,CAAMC,KAAK,sBACVtC,YAAMV,EAAE,yBEvEFiD,GCKa,SAAC,GAAW,IAATjD,EAAQ,EAARA,EACvBoD,EAAaE,iBAAO,MAC1B,EAAkCC,oBAAS,GAA3C,mBAAOpC,EAAP,KAAkBqC,EAAlB,KAEAC,qBAAU,WACJC,aACFN,EAAWO,QAAQC,MAAMC,qBAAuB,aAYpD,OACE,cAAC,GAAD,CACE7D,EAAGA,EACHoD,WAAYA,EACZjC,UAAWA,EACXC,aAbiB,WAAgB,IAAf0C,EAAc,wDAClCN,EAAaM,IAaX/B,qBAVyB,SAACgC,EAAD,GAAmB,IAAbjF,EAAY,EAAZA,MACjCb,EAAK+F,eAAelF,IAUlBD,gBAAiBA,O,SC7BjBoF,GAA+BhF,IAAOoD,IAAV,+yBCDnB6B,GDqCa,SAAC,GAAqB,IAAnBlE,EAAkB,EAAlBA,EAAMD,EAAY,kBAC/C,OACE,eAACkE,GAAD,2BAAkClE,GAAlC,cACE,qBAAKe,UAAU,6BAAf,SAA6CJ,YAAMV,EAAE,gBACrD,qBAAKc,UAAU,gCAAf,SACGJ,YAAMV,EAAE,0B,UEpCXmE,GAA0BlF,IAAOoD,IAAV,kkDCNd+B,GDkFQ,SAAC,GAAyC,IAAvCpE,EAAsC,EAAtCA,EAAGqE,EAAmC,EAAnCA,YAAaC,EAAsB,EAAtBA,gBACxC,OACE,eAACH,GAAD,WACE,eAAC,EAAD,CACErD,UAAU,kBACV3B,gBAAiBQ,EACjBJ,qBAAsBI,EACtBP,MAAM,QACN4B,QAASsD,EACTjB,IAAKgB,EANP,UAQE,cAACE,GAAA,EAAD,CAAO1C,IAAI,sBAAsBf,UAAU,kBAC1CJ,YAAMV,EAAE,iBAEX,qBAAKc,UAAU,8BAAf,SAA8CJ,YAAMV,EAAE,oBE/FtDwE,GAAmBvF,YAAOsF,KAAPtF,CAAH,uJCDPwF,GDSS,WACtB,OACE,cAACD,GAAD,CAAkB1D,UAAU,WAAWe,IAAI,qBAAqBxB,UAAQ,KETtEqE,GAAWzF,IAAOoD,IAAV,uRAcRsC,GAAa1F,IAAOoD,IAAV,8LAUVuC,GAAU3F,IAAO4F,OAAV,uJC1BEC,GDqCU,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,YAAaC,EAAc,EAAdA,QACvC,OACE,eAACN,GAAD,WACGM,EAAU,cAAC,GAAD,IAAsB,KACjC,cAACL,GAAD,CAAYM,WAAS,YAArB,SACE,eAACL,GAAD,CACEM,MAAM,MACNrD,IAAI,2IACJsD,OAAQJ,EAHV,gCAKsB,IACpB,mBAAGK,OAAO,SAASC,KAAK,qBAAqBC,IAAI,aAAjD,8BAEK,IARP,2BAS2B,IACzB,mBAAGF,OAAO,SAASC,KAAK,6BAA6BC,IAAI,aAAzD,oBAVF,aE5CO,OAA0B,gCCWnCC,GAAyBtG,IAAOoD,IAAV,03CAQFa,ICjBXsC,GD+EO,SAAC,GAMhB,IALLxF,EAKI,EALJA,EACAgF,EAII,EAJJA,QACAD,EAGI,EAHJA,YACAV,EAEI,EAFJA,YACAC,EACI,EADJA,gBAEA,OACE,eAAC,GAAD,WACE,cAAC,GAAD,CAAqB7D,GAAG,WAAWT,EAAGA,IACtC,cAAC,GAAD,CAAkB+E,YAAaA,EAAaC,QAASA,IACrD,sBAAKlE,UAAU,qBAAf,UACE,cAAC,GAAD,CAAqBL,GAAG,cAAcT,EAAGA,IACzC,cAAC,GAAD,CACEA,EAAGA,EACHqE,YAAaA,EACbC,gBAAiBA,OAGrB,qBAAKxD,UAAW,mBAAhB,SACE,cAACiC,EAAA,EAAD,CAAMC,KAAK,4BEnGJuC,GCEgB,SAAC,GAAW,IAATvF,EAAQ,EAARA,EAChC,EAA8BuD,oBAAS,GAAvC,mBAAOyB,EAAP,KAAgBS,EAAhB,KAEMpB,EAAcf,iBAAO,MAc3B,OACE,cAAC,GAAD,CACEtD,EAAGA,EACHgF,QAASA,EACTD,YAhBgB,WAClBU,GAAW,IAgBTpB,YAAaA,EACbC,gBAdoB,WAClBZ,aACFW,EAAYV,QAAQ+B,UAAUC,OAAO,qBAChCtB,EAAYV,QAAQiC,YACzBvB,EAAYV,QAAQ+B,UAAUG,IAAI,0B,sECTlCC,GAAoB7G,IAAOoD,IAAV,0uCCNR+B,GDkEQ,SAAC,GAAyC,IAAvCpE,EAAsC,EAAtCA,EAAGqE,EAAmC,EAAnCA,YAAaC,EAAsB,EAAtBA,gBACxC,OACE,eAACwB,GAAD,WACE,eAAC,EAAD,CACEhF,UAAU,sBACV3B,gBAAiBQ,EACjBJ,qBAAsBI,EACtBP,MAAM,QACN4B,QAASsD,EACTjB,IAAKgB,EANP,UAQE,cAACE,GAAA,EAAD,CAAO1C,IAAI,sBAAsBf,UAAU,kBAC1CJ,YAAMV,EAAE,iBAEX,qBAAKc,UAAU,kCAAf,SACGJ,YAAMV,EAAE,oB,oBE9EX+F,GAAuB9G,IAAOoD,IAAV,8XAqBpB2D,GAAc,CAClBC,QAAS,EACTC,KAAM,EACNC,IAAK,GC3BQC,GD8BM,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACtB,OACE,cAAC,KAAD,CACEC,eAAgBN,GAChBlF,UAAU,kBACVyF,gBAAgB,yBAHlB,SAKGF,EAAK5E,KAAI,WAA2B+E,GAA3B,IAhBAC,EAAGC,EAgBAC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,KAAMhF,EAAlB,EAAkBA,MAAlB,OACR,cAACmE,GAAD,CAAsBd,WAAS,UAA/B,SACE,eAAC4B,GAAA,EAAD,CAAM/F,UAAW,eAAgBT,UAAQ,EAAzC,UACE,qBACEyG,IAAI,OACJhG,UAAW,oBACXe,IAAG,oBAtBD4E,EAsBsBD,EAtBnBE,EAsBsB,GArB/BD,EAAIC,EAAK,GAqBF,UAEJ9E,GAAS,cAAC2C,GAAA,EAAD,CAAO1C,IAAKD,EAAOmF,SAAO,EAACC,IAAI,IACzC,eAACH,GAAA,EAAKnE,QAAN,WACE,cAACmE,GAAA,EAAKI,YAAN,UAAmBN,IACnB,cAAC/F,EAAA,EAAD,IACA,cAACiG,GAAA,EAAKvG,OAAN,CAAamC,UAAU,QAAvB,SAAgCmE,WAXQJ,SExCvC,OAA0B,mCCanCU,GAAwBjI,IAAOoD,IAAV,mlBACDa,IA2BpBiE,GAAiB,SAAC,GAQjB,IAPLnH,EAOI,EAPJA,EACAqG,EAMI,EANJA,KACAe,EAKI,EALJA,QACAC,EAII,EAJJA,WACAC,EAGI,EAHJA,UACAhD,EAEI,EAFJA,gBACAD,EACI,EADJA,YAEA,OACE,cAAC6C,GAAD,CAAuB7D,IAAKgE,EAA5B,SACE,eAACE,GAAA,EAAD,CAAWzG,UAAU,gBAArB,UACE,cAACyG,GAAA,EAAD,CAAWzG,UAAW,uBAAtB,SACE,eAACR,GAAA,EAAD,CAAQmC,UAAU,SAAlB,UACE,cAACnC,GAAA,EAAOoC,QAAR,CAAgBT,GAAG,KAAKnB,UAAW,qBAAnC,SACGJ,YAAMV,EAAE,oBAEX,cAACY,EAAA,EAAD,IACA,cAACN,GAAA,EAAOqC,UAAR,UAAmBjC,YAAMV,EAAE,4BAG/B,cAAC,GAAD,CACEA,EAAGA,EACHsE,gBAAiBA,EACjBD,YAAaA,IAEf,cAAC,KAAD,CACET,MAAO,CAAE4D,SAAU,UACnBC,WAAYpB,EAAKqB,OACjBC,KAAML,EACNF,QAASA,EACTQ,OACE,cAACL,GAAA,EAAD,CAAWzG,UAAU,sBAArB,SACE,cAAC,GAAD,MAPN,SAWE,cAAC,GAAD,CAAcuF,KAAMA,YAuB9Bc,GAAeU,aAAe,CAC5BxB,KAAM,IAGOc,I,MCvGAA,GDuGAA,GEvGAW,GCWiB,SAAC,GAAW,IAAT9H,EAAQ,EAARA,EAC3BqH,EAAa/D,iBAAO,MACpByE,EAAWzE,iBAAO,MAClBe,EAAcf,iBAAO,MAE3B,EAAwBC,mBAAS,IAAjC,mBAAO8C,EAAP,KAAa2B,EAAb,KACA,EAA4BzE,mBAAS,GAArC,mBAAO0E,EAAP,KAAeC,EAAf,KACA,EAA8B3E,oBAAS,GAAvC,mBAAO6D,EAAP,KAAgBe,EAAhB,KAEMC,EAAMC,mBAAQ,kBAAM,IAAIC,qBnCtBT5I,kDmCsB4C,IAEjE+D,qBAAU,WACJC,aACF2D,EAAW1D,QAAQC,MAAMC,qBAAuB,UAGnC,yCAAG,6BAAA4C,EAAA,sEACV2B,EAAIG,UnC5BO7I,2CmC2BD,uBAEV0I,EAAII,WAFM,cAGhBT,EAASpE,QAAUyE,EAAIK,WnC/BZ/I,GmC4BK,SAIGqI,EAASpE,QAAQ+E,QAAQ,CAAEC,MAAOnJ,EAAOyI,OAAQ,IAJpD,OAIVW,EAJU,OAKhBZ,EAAQY,GALQ,2CAAH,oDAOfC,KACC,CAACT,IAEJ,IAAMd,EAAS,yCAAG,6BAAAb,EAAA,6DACZJ,EAAKqB,OAASlI,IAAU,GAC1B2I,GAAW,GAEbJ,EAASpE,QAAUyE,EAAIK,WnC1CV/I,GmCsCG,SAKGqI,EAASpE,QAAQ+E,QAAQ,CAC1CC,MAAOnJ,EACPyI,OAAQA,EAASzI,IAPH,OAKVoJ,EALU,OAShBV,EAAUD,EAASzI,GACnBwI,EAAQ,GAAD,oBAAK3B,GAAL,aAAcuC,KAVL,2CAAH,qDAqBf,OACE,cAAC,GAAD,CACE5I,EAAGA,EACHqG,KAAMA,EACNe,QAASA,EACTE,UAAWA,EACXD,WAAYA,EACZhD,YAAaA,EACbC,gBAhBoB,WAClBZ,aACFW,EAAYV,QAAQ+B,UAAUC,OAAO,qBAChCtB,EAAYV,QAAQiC,YACzBvB,EAAYV,QAAQ+B,UAAUG,IAAI,0BClDlCiD,GAAkB7J,YAAOD,EAAPC,CAAH,sRCJN8J,GDmBK,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,YAAaC,EAAa,EAAbA,OAClC,OACE,cAACH,GAAD,CACE9H,QAASgI,EACT1J,UAAU,EACVF,MAAM,QACND,gBAAgB,YAChBkE,IAAK4F,EALP,SAOE,cAAClG,EAAA,EAAD,CAAMC,KAAK,aAAakG,QAAM,OE5BrBH,GCCc,WAC3B,IAAME,EAAS3F,iBAAO,MAetBG,qBAAU,WACRb,OAAOuG,SAAW,WAdG,IAACC,KAeLH,EAAOtF,WAZpB0F,SAASC,KAAKC,UAAY,IAC1BF,SAASG,gBAAgBD,UAAY,GAErCH,EAASxF,MAAM6F,QAAU,QAEzBL,EAASxF,MAAM6F,QAAU,YAgB/B,OAAO,cAAC,GAAD,CAAaT,YALA,WAClBK,SAASC,KAAKC,UAAY,EAC1BF,SAASG,gBAAgBD,UAAY,GAGON,OAAQA,KCzBlDS,GAAkBzK,YAAOsI,KAAPtI,CAAH,gDCHN4B,GDOA,SAAC,GAAW,IAATb,EAAQ,EAARA,EAChB,OACE,cAAC0J,GAAD,CAAiBjH,UAAU,SAA3B,SAAqC/B,YAAMV,EAAE,cEUlC2J,kBAZF,SAAC,GAAW,IAAT3J,EAAQ,EAARA,EACd,OACE,gCACE,cAAC,GAAD,CAAYA,EAAGA,IACf,cAAC,GAAD,CAAeA,EAAGA,IAClB,cAAC,GAAD,CAAgBA,EAAGA,IACnB,cAAC,GAAD,IACA,cAAC,GAAD,CAAQA,EAAGA,U,OCRF4J,OAJf,WACE,OAAO,cAAC,GAAD,KCOMC,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,0CCKdQ,KAAIhM,OAEJiM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFpB,SAASqB,eAAe,SAM1Bb,O","file":"static/js/main.7a70e76d.chunk.js","sourcesContent":["import i18n from \"i18next\";\r\nimport detector from \"i18next-browser-languagedetector\";\r\nimport backend from \"i18next-xhr-backend\";\r\nimport { reactI18nextModule } from \"react-i18next\";\r\n\r\nexport const languageOptions = {\r\n  en: \"EN\",\r\n  ja: \"日本\",\r\n};\r\n\r\ni18n\r\n  .use(detector)\r\n  .use(backend)\r\n  .use(reactI18nextModule)\r\n  .init({\r\n    fallbackLng: \"en\",\r\n\r\n    keySeparator: false,\r\n\r\n    interpolation: {\r\n      escapeValue: false,\r\n    },\r\n    react: {\r\n      wait: true,\r\n    },\r\n  });\r\n\r\nconst valueWithDefault = (value) => {\r\n  if (value in languageOptions) {\r\n    return value;\r\n  } else return \"en\";\r\n};\r\n\r\nexport const currentLanguage = () => {\r\n  return valueWithDefault(i18n.language);\r\n};\r\n\r\nexport default i18n;\r\n","import PPButton from \"./PPButton\";\r\n\r\nexport default PPButton;\r\n","import styled from \"styled-components\";\r\n\r\nconst PPButton = styled.button`\r\n  background-color: ${({ backgroundColor }) => {\r\n    return backgroundColor;\r\n  }};\r\n  font-weight: bold;\r\n  color: ${({ color }) => {\r\n    return color;\r\n  }};\r\n\r\n  border: ${({ bordered }) => {\r\n    return bordered ? \"2px solid white\" : \"none\";\r\n  }};\r\n\r\n  border-radius: ${({ circular }) => {\r\n    return circular ? \"50%\" : \"0.3rem\";\r\n  }};\r\n\r\n  line-height: 1em;\r\n\r\n  @media (hover: hover) and (pointer: fine) {\r\n    &:hover {\r\n      background-color: ${({ hoverBackgroundColor }) => {\r\n        return hoverBackgroundColor;\r\n      }};\r\n      box-shadow: 0px 15px 25px -5px rgba(darken(dodgerblue, 40%));\r\n      transform: scale(1.03);\r\n    }\r\n  }\r\n\r\n  &:active {\r\n    box-shadow: 0px 4px 8px rgba(darken(dodgerblue, 30%));\r\n    transform: scale(0.98);\r\n  }\r\n`;\r\n\r\nexport default PPButton;\r\n","const SPREADSHEET_ID = process.env.REACT_APP_SPREADSHEET_ID;\r\nconst SHEET_ID = process.env.REACT_APP_SHEET_ID;\r\nconst GOOGLE_API_KEY = process.env.REACT_APP_GOOGLE_API_KEY;\r\n\r\nconst LIMIT = parseInt(process.env.REACT_APP_MESSAGE_LIMIT, 10);\r\n\r\nconst COLOR = {\r\n  powerPoint: \"#C43E1C\",\r\n  powerPointHovered: \"#CE5435\",\r\n  youtube: \"#FF3737\",\r\n  youtubeHovered: \"#FF5757\",\r\n  discord: \"#829DFA\",\r\n  discordHovered: \"#97AEFE\",\r\n  png: \"#29b6f6\",\r\n  pngHovered: \"#81d4fa\",\r\n};\r\n\r\nexport { SPREADSHEET_ID, SHEET_ID, GOOGLE_API_KEY, LIMIT, COLOR };\r\n","import styled from \"styled-components\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { Divider } from \"semantic-ui-react\";\r\nimport parse from \"html-react-parser\";\r\n\r\nimport PPButton from \"../../../PPButton\";\r\n\r\nimport { COLOR } from \"../../../../constants\";\r\n\r\nconst CreditButton = styled(PPButton)`\r\n  font-size: 1.3rem;\r\n  text-shadow: 0 0 10px black;\r\n  padding: 0.5rem 1rem;\r\n  margin-right: 1rem;\r\n`;\r\n\r\nconst CreditCloseButton = styled(PPButton)`\r\n  font-size: 1.3rem;\r\n  padding: 0.5rem 1rem;\r\n  margin-right: 1rem;\r\n`;\r\n\r\nconst CenteredModal = (props) => {\r\n  const { t, ...restProps } = props;\r\n  return (\r\n    <Modal\r\n      {...restProps}\r\n      //  animation={false} //turn this back on if findDOMnode warning triggers you\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          {parse(t(\"credit\"))}\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <h4> {parse(t(\"illustrationCredit\"))}</h4>\r\n        <p>\r\n          Hikawa (@hikawa21), shukonbu (@konbusennin2),NAMCOOo (@NAMCOOo),\r\n          Yuuhidora (@Yu_Hydra0319)\r\n        </p>\r\n        <Divider />\r\n        <h4> {parse(t(\"staffCredit\"))}</h4>\r\n        <p>\r\n          buffy, iH8Ecchi, reon, GEN, reo, Wafuu, Ppang, The Unknown, Keaton,\r\n          Rex55, Agent Sheep 003, CruelN1N1, Third\r\n        </p>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <CreditCloseButton\r\n          className=\"credit_close_button\"\r\n          backgroundColor={COLOR.png}\r\n          hoveredBackgroundColor={COLOR.pngHovered}\r\n          color=\"white\"\r\n          onClick={props.onHide}\r\n        >\r\n          Close\r\n        </CreditCloseButton>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CreditModal = ({ t, modalShow, modalOnClick }) => {\r\n  return (\r\n    <>\r\n      <CreditButton\r\n        backgroundColor={\"rgba(0,0,0,0)\"}\r\n        bordered\r\n        color=\"white\"\r\n        onClick={() => modalOnClick(true)}\r\n      >\r\n        {parse(t(\"credit\"))}\r\n      </CreditButton>\r\n\r\n      <CenteredModal\r\n        show={modalShow}\r\n        onHide={() => modalOnClick(false)}\r\n        t={t}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreditModal;\r\n","import CreditModal from \"./CreditModal\";\r\n\r\nexport default CreditModal;\r\n","import { Dropdown } from \"semantic-ui-react\";\r\n\r\nimport PPButton from \"../../../PPButton\";\r\n\r\nimport { languageOptions } from \"../../../../i18n\";\r\n\r\nconst options = Object.entries(languageOptions).map(([id, name]) => ({\r\n  key: id,\r\n  text: name,\r\n  value: id,\r\n  image: { src: `/${id}.png` },\r\n}));\r\n\r\nconst PPLingo = ({ handleLanguageChange, currentLanguage }) => {\r\n  return (\r\n    <Dropdown\r\n      className=\"pplingo\"\r\n      as={PPButton}\r\n      backgroundColor={\"rgba(0,0,0,0)\"}\r\n      bordered\r\n      color=\"white\"\r\n      labeled\r\n      options={options}\r\n      value={currentLanguage}\r\n      onChange={handleLanguageChange}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PPLingo;\r\n","import PPLingo from \"./PPLingo\";\r\n\r\nexport default PPLingo;\r\n","import styled from \"styled-components\";\r\n\r\nimport CreditModal from \"./CreditModal\";\r\nimport PPLingo from \"./PPLingo\";\r\n\r\nconst CornerButtonsWrapper = styled.div`\r\n  position: absolute;\r\n  top: 1rem;\r\n  right: 1rem;\r\n  z-index: 99;\r\n  margin-top: 0px !important;\r\n  margin-bottom: 0px !important;\r\n  img {\r\n    height: 1.3rem;\r\n    margin-top: 0px !important;\r\n    margin-bottom: 0px !important;\r\n  }\r\n`;\r\n\r\nconst CornerButtons = ({\r\n  t,\r\n  modalShow,\r\n  modalOnClick,\r\n  handleLanguageChange,\r\n  currentLanguage,\r\n}) => {\r\n  return (\r\n    <CornerButtonsWrapper>\r\n      <CreditModal t={t} modalShow={modalShow} modalOnClick={modalOnClick} />\r\n      <PPLingo\r\n        handleLanguageChange={handleLanguageChange}\r\n        currentLanguage={currentLanguage}\r\n      />\r\n    </CornerButtonsWrapper>\r\n  );\r\n};\r\n\r\nexport default CornerButtons;\r\n","import CornerButtons from \"./CornerButtons\";\r\n\r\nexport default CornerButtons;\r\n","import { Header, Icon } from \"semantic-ui-react\";\r\nimport styled from \"styled-components\";\r\nimport parse from \"html-react-parser\";\r\n\r\nimport PPButton from \"../../PPButton\";\r\n\r\nimport { COLOR } from \"../../../constants\";\r\n\r\nconst CongratulationsBodyContainer = styled.div`\r\n  width: 50%;\r\n  position: absolute;\r\n  top: 50%;\r\n  transform: translate(0, -50%);\r\n  z-index: 10;\r\n  padding-left: 7rem;\r\n\r\n  .congrats_card_header {\r\n    color: white !important;\r\n    padding: 1rem 0;\r\n    font-size: 5rem;\r\n    font-weight: 900;\r\n  }\r\n\r\n  .congrats_card_subheader {\r\n    color: white !important;\r\n    font-size: 2rem !important;\r\n  }\r\n\r\n  .congrats_buttons {\r\n    padding: 1rem 0;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    button {\r\n      font-size: 1.3rem;\r\n      margin-right: 1rem;\r\n      margin-bottom: 1rem;\r\n      padding: 1.1rem 1.4rem;\r\n      width: 19rem;\r\n    }\r\n  }\r\n\r\n  .congrats_description {\r\n    font-size: 1.5rem;\r\n    color: white;\r\n    max-height: 25vh;\r\n    overflow-y: auto;\r\n  }\r\n\r\n  @media only screen and (max-width: 1100px) {\r\n    width: 100%;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    padding: 0 6rem;\r\n\r\n    .congrats_card_header {\r\n      font-size: 4rem;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 820px) and (orientation: landscape) {\r\n    padding: 0 2rem;\r\n    .congrats_card_header {\r\n      font-size: 2.75rem;\r\n    }\r\n    .congrats_card_subheader {\r\n      font-size: 1rem !important;\r\n    }\r\n    .congrats_buttons {\r\n      padding: 0.7rem 0;\r\n      button {\r\n        font-size: 1rem;\r\n        padding: 0.7rem 0.7rem;\r\n        margin-right: 0.7rem;\r\n        margin-bottom: 0.7rem;\r\n        width: 15rem;\r\n      }\r\n    }\r\n    .congrats_description {\r\n      font-size: 1rem;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 425px) {\r\n    padding: 0 2rem;\r\n    .congrats_card_header {\r\n      font-size: 2.75rem;\r\n    }\r\n    .congrats_card_subheader {\r\n      font-size: 1rem !important;\r\n    }\r\n    .congrats_buttons {\r\n      padding: 0.7rem 0;\r\n      button {\r\n        font-size: 1rem;\r\n        padding: 0.7rem 0.7rem;\r\n        margin-right: 0.7rem;\r\n        margin-bottom: 0.7rem;\r\n        width: 15rem;\r\n      }\r\n    }\r\n    .congrats_description {\r\n      font-size: 1rem !important;\r\n    }\r\n  }\r\n`;\r\n\r\nconst CongratulationsBody = ({ t }) => {\r\n  return (\r\n    <CongratulationsBodyContainer>\r\n      <Header textAlign=\"left\">\r\n        <Header.Content as=\"h1\" className={\"congrats_card_header\"}>\r\n          {parse(t(\"congratsHeader\"))}\r\n        </Header.Content>\r\n        <Header.Subheader className={\"congrats_card_subheader\"}>\r\n          {parse(t(\"congratsSubHeader\"))}\r\n        </Header.Subheader>\r\n      </Header>\r\n      <div className={\"congrats_buttons\"}>\r\n        <PPButton\r\n          backgroundColor={COLOR.youtube}\r\n          hoverBackgroundColor={COLOR.youtubeHovered}\r\n          color=\"white\"\r\n          onClick={() => {\r\n            window\r\n              .open(\r\n                \"https://www.youtube.com/channel/UCZlDXzGoo7d44bwdNObFacg?sub_confirmation=1\",\r\n                \"_blank\"\r\n              )\r\n              .focus();\r\n          }}\r\n        >\r\n          <Icon name=\"youtube\" />\r\n          {parse(t(\"youtubeButton\"))}\r\n        </PPButton>\r\n        <PPButton\r\n          backgroundColor={COLOR.discord}\r\n          hoverBackgroundColor={COLOR.discordHovered}\r\n          color=\"white\"\r\n          onClick={() => {\r\n            window.open(\"https://discord.gg/ppt\", \"_blank\").focus();\r\n          }}\r\n        >\r\n          <Icon name=\"discord\" />\r\n          {parse(t(\"discordButton\"))}\r\n        </PPButton>\r\n      </div>\r\n      <div className={\"congrats_description\"}>\r\n        {parse(t(\"congratsDescription\"))}\r\n      </div>\r\n    </CongratulationsBodyContainer>\r\n  );\r\n};\r\n\r\nexport default CongratulationsBody;\r\n","import CongratulationsBody from \"./CongratulationsBody\";\r\n\r\nexport default CongratulationsBody;\r\n","export default __webpack_public_path__ + \"static/media/hikawa.6cd1e28f.png\";","import PropTypes from \"prop-types\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport styled from \"styled-components\";\r\nimport parse from \"html-react-parser\";\r\n\r\nimport CornerButtons from \"./CornerButtons\";\r\nimport CongratulationsBody from \"./CongratulationsBody\";\r\n\r\nimport backgroundImg from \"../../assets/images/hikawa.png\";\r\n\r\nconst PPCongratsContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: top;\r\n  flex-direction: column;\r\n  min-height: 100vh;\r\n  position: relative;\r\n  background-color: deepskyblue;\r\n  background-image: url(${backgroundImg});\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  background-position: center;\r\n  background-attachment: fixed;\r\n  color: white;\r\n  text-shadow: 0 0 10px black;\r\n  /* animation: slideBg 65s infinite; */\r\n  animation-timing-function: ease-in-out;\r\n\r\n  &:before {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    background-image: linear-gradient(\r\n      180deg,\r\n      rgba(255, 255, 255, 0) 0%,\r\n      rgba(0, 0, 0, 1) 83%\r\n    );\r\n    opacity: 0.6;\r\n  }\r\n\r\n  .congrats_card_more {\r\n    color: white;\r\n    position: absolute;\r\n    font-size: 2.5vh;\r\n    bottom: 1vh;\r\n    text-align: center;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst PPCongrats = ({\r\n  t,\r\n  congratRef,\r\n  modalShow,\r\n  modalOnClick,\r\n  handleLanguageChange,\r\n  currentLanguage,\r\n}) => {\r\n  return (\r\n    <PPCongratsContainer ref={congratRef}>\r\n      <CornerButtons\r\n        t={t}\r\n        modalShow={modalShow}\r\n        modalOnClick={modalOnClick}\r\n        handleLanguageChange={handleLanguageChange}\r\n        currentLanguage={currentLanguage}\r\n      />\r\n      <CongratulationsBody t={t} />\r\n      <div className={\"congrats_card_more\"}>\r\n        <Icon name=\"angle double down\" />\r\n        {parse(t(\"scrollForMore\"))}\r\n      </div>\r\n    </PPCongratsContainer>\r\n  );\r\n};\r\n\r\nPPCongrats.propTypes = {\r\n  t: PropTypes.func.isRequired,\r\n  congratRef: PropTypes.oneOfType([\r\n    PropTypes.func,\r\n    PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\r\n  ]).isRequired,\r\n  modalShow: PropTypes.bool.isRequired,\r\n  modalOnClick: PropTypes.func.isRequired,\r\n  handleLanguageChange: PropTypes.func.isRequired,\r\n  currentLanguage: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default PPCongrats;\r\n","import PPCongrats from \"./PPCongrats\";\r\n\r\nexport default PPCongrats;\r\n","import PPCongratsContainer from \"./PPCongratsContainer\";\r\n\r\nexport default PPCongratsContainer;\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { isMobile } from \"react-device-detect\";\r\n\r\nimport PPCongrats from \"../../../components/PPCongrats\";\r\nimport i18n, { currentLanguage } from \"../../../i18n\";\r\n\r\nconst PPCongratsContainer = ({ t }) => {\r\n  const congratRef = useRef(null);\r\n  const [modalShow, setModalShow] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (isMobile) {\r\n      congratRef.current.style.backgroundAttachment = \"scroll\";\r\n    }\r\n  });\r\n\r\n  const modalOnClick = (v = false) => {\r\n    setModalShow(v);\r\n  };\r\n\r\n  const handleLanguageChange = (e, { value }) => {\r\n    i18n.changeLanguage(value);\r\n  };\r\n\r\n  return (\r\n    <PPCongrats\r\n      t={t}\r\n      congratRef={congratRef}\r\n      modalShow={modalShow}\r\n      modalOnClick={modalOnClick}\r\n      handleLanguageChange={handleLanguageChange}\r\n      currentLanguage={currentLanguage()}\r\n    />\r\n  );\r\n};\r\n\r\nPPCongratsContainer.propTypes = {\r\n  t: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default PPCongratsContainer;\r\n","import styled from \"styled-components\";\r\nimport parse from \"html-react-parser\";\r\n\r\nconst DownloadDescriptionContainer = styled.div`\r\n  color: white;\r\n  margin-bottom: 2vw;\r\n  .download_description_title {\r\n    font-weight: 900;\r\n    font-size: 5rem;\r\n  }\r\n  .download_description_subtitle {\r\n    font-size: 1.5rem;\r\n  }\r\n  @media only screen and (max-width: 1100px) {\r\n    .download_description_title {\r\n      font-size: 4rem;\r\n    }\r\n    .download_description_subtitle {\r\n      font-size: 1.5rem;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 820px) and (orientation: landscape) {\r\n    .download_description_title {\r\n      font-size: 2.75rem;\r\n    }\r\n    .download_description_subtitle {\r\n      font-size: 1rem;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 425px) {\r\n    .download_description_title {\r\n      font-size: 2.75rem;\r\n    }\r\n    .download_description_subtitle {\r\n      font-size: 1rem;\r\n    }\r\n  }\r\n`;\r\n\r\nconst DownloadDescription = ({ t, ...props }) => {\r\n  return (\r\n    <DownloadDescriptionContainer {...props}>\r\n      <div className=\"download_description_title\">{parse(t(\"pptHeader\"))}</div>\r\n      <div className=\"download_description_subtitle\">\r\n        {parse(t(\"pptDescription\"))}\r\n      </div>\r\n    </DownloadDescriptionContainer>\r\n  );\r\n};\r\nexport default DownloadDescription;\r\n","import DownloadDescription from \"./DownloadDescription\";\r\n\r\nexport default DownloadDescription;\r\n","import styled from \"styled-components\";\r\nimport { Image } from \"semantic-ui-react\";\r\nimport parse from \"html-react-parser\";\r\n\r\nimport PPButton from \"../../PPButton\";\r\n\r\nimport { COLOR } from \"../../../constants\";\r\n\r\nconst DownloadButtonContainer = styled.div`\r\n  float: right;\r\n  .download_button {\r\n    float: right;\r\n    font-size: 2rem;\r\n    padding: 1rem 1rem;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n  .download_icon {\r\n    width: 2rem;\r\n    margin-right: 1rem;\r\n  }\r\n  .download_button_description {\r\n    color: white;\r\n  }\r\n  @media only screen and (max-width: 1100px) {\r\n    float: none;\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    font-size: 3rem;\r\n    padding: 1.5rem 1.5rem;\r\n    .download_button {\r\n      float: none;\r\n    }\r\n    .download_icon {\r\n      width: 3rem;\r\n      margin-right: 1rem;\r\n    }\r\n    .download_button_description {\r\n      font-size: 1.5rem;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 820px) and (orientation: landscape) {\r\n    .download_button {\r\n      font-size: 1.5rem;\r\n      padding: 1rem 1rem;\r\n    }\r\n    .download_icon {\r\n      width: 1.5rem;\r\n    }\r\n    .download_button_description {\r\n      font-size: 1rem;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 768px) {\r\n    .download_button {\r\n      font-size: 2rem;\r\n      padding: 1rem 2rem;\r\n    }\r\n    .download_icon {\r\n      width: 2rem;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 425px) {\r\n    .download_button {\r\n      font-size: 1.5rem;\r\n      padding: 1rem 1rem;\r\n    }\r\n    .download_icon {\r\n      width: 1.5rem;\r\n    }\r\n    .download_button_description {\r\n      font-size: 1rem;\r\n    }\r\n  }\r\n\r\n  @media (hover: hover) and (pointer: fine) {\r\n    .download_button:hover .download_icon {\r\n      animation: loading 1s infinite;\r\n    }\r\n  }\r\n`;\r\n\r\nconst DownloadButton = ({ t, downloadRef, onDownloadClick }) => {\r\n  return (\r\n    <DownloadButtonContainer>\r\n      <PPButton\r\n        className=\"download_button\"\r\n        backgroundColor={COLOR.powerPoint}\r\n        hoverBackgroundColor={COLOR.powerPointHovered}\r\n        color=\"white\"\r\n        onClick={onDownloadClick}\r\n        ref={downloadRef}\r\n      >\r\n        <Image src=\"/white_shuriken.png\" className=\"download_icon\" />\r\n        {parse(t(\"pptButton\"))}\r\n      </PPButton>\r\n      <div className=\"download_button_description\">{parse(t(\"pptDetail\"))}</div>\r\n    </DownloadButtonContainer>\r\n  );\r\n};\r\nexport default DownloadButton;\r\n","import DownloadButton from \"./DownloadButton\";\r\n\r\nexport default DownloadButton;\r\n","import styled from \"styled-components\";\r\nimport { Image } from \"semantic-ui-react\";\r\n\r\nconst SpinningShuriken = styled(Image)`\r\n  animation: loading 1s ease infinite;\r\n  width: 64px;\r\n  height: 64px;\r\n  position: absolute !important;\r\n  z-index: 10;\r\n`;\r\n\r\nconst ShurikenSpinner = () => {\r\n  return (\r\n    <SpinningShuriken className=\"shuriken\" src=\"/blue_shuriken.png\" centered />\r\n  );\r\n};\r\n\r\nexport default ShurikenSpinner;\r\n","import ShurikenSpinner from \"./ShurikenSpinner\";\r\n\r\nexport default ShurikenSpinner;\r\n","import styled from \"styled-components\";\r\n\r\nimport ShurikenSpinner from \"../../ShurikenSpinner\";\r\n\r\nconst PPTframe = styled.div`\r\n  padding-left: 4vw;\r\n  padding-right: 4vw;\r\n  width: 50%;\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  @media only screen and (max-width: 1100px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst RContainer = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  overflow: hidden;\r\n  padding-top: 56.25%;\r\n  @media only screen and (max-width: 420px) {\r\n    padding-top: 68.75%;\r\n  }\r\n`;\r\n\r\nconst RIframe = styled.iframe`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  border: none;\r\n`;\r\n\r\nconst ResponsiveIframe = ({ hideSpinner, loading }) => {\r\n  return (\r\n    <PPTframe>\r\n      {loading ? <ShurikenSpinner /> : null}\r\n      <RContainer data-aos=\"flip-left\">\r\n        <RIframe\r\n          title=\"PPT\"\r\n          src=\"https://onedrive.live.com/embed?cid=9C12431F4CA33E8E&amp;resid=9C12431F4CA33E8E%2129326&amp;authkey=AE5OmX5CpHbITUU&amp;em=2&amp;wdAr=1.7777777777777777\"\r\n          onLoad={hideSpinner}\r\n        >\r\n          This is an embedded{\" \"}\r\n          <a target=\"_blank\" href=\"https://office.com\" rel=\"noreferrer\">\r\n            Microsoft Office\r\n          </a>{\" \"}\r\n          presentation, powered by{\" \"}\r\n          <a target=\"_blank\" href=\"https://office.com/webapps\" rel=\"noreferrer\">\r\n            Office\r\n          </a>\r\n          .\r\n        </RIframe>\r\n      </RContainer>\r\n    </PPTframe>\r\n  );\r\n};\r\n\r\nexport default ResponsiveIframe;\r\n","import ResponsiveIframe from \"./ResponsiveIframe\";\r\n\r\nexport default ResponsiveIframe;\r\n","export default __webpack_public_path__ + \"static/media/bg2.64ba9470.jpg\";","import PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { Icon } from \"semantic-ui-react\";\r\n\r\nimport DownloadDescription from \"./DownloadDescription\";\r\nimport DownloadButton from \"./DownloadButton\";\r\n\r\nimport ResponsiveIframe from \"./ResponsiveIframe\";\r\n\r\nimport backgroundImg from \"../../assets/images/bg2.jpg\";\r\n\r\nconst PPresentationContainer = styled.div`\r\n  position: relative;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 3rem 0;\r\n  background-image: url(${backgroundImg});\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  background-position: center;\r\n  .pprsenation_more {\r\n    color: white;\r\n    position: absolute;\r\n    font-size: 2.5vh;\r\n    bottom: 1vh;\r\n    text-align: center;\r\n    width: 100%;\r\n  }\r\n  #desc_top {\r\n    display: none;\r\n  }\r\n\r\n  .download_container {\r\n    width: 50%;\r\n    padding-left: 4vw;\r\n    padding-right: 4vw;\r\n    text-align: right;\r\n  }\r\n\r\n  @media only screen and (max-width: 1100px) {\r\n    padding: 4rem 6rem;\r\n    #desc_top {\r\n      display: block;\r\n      text-align: center;\r\n      margin-top: 3rem;\r\n    }\r\n    #desc_bottom {\r\n      display: none;\r\n    }\r\n    .download_container {\r\n      width: auto;\r\n      text-align: center;\r\n      display: flex;\r\n      justify-content: center;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 820px) and (orientation: landscape) {\r\n    padding: 5rem 2rem;\r\n    .download_container {\r\n      padding-bottom: 5rem;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    #desc_top {\r\n      margin-top: 1rem;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 425px) {\r\n    padding: 5rem 2rem;\r\n    .download_container {\r\n      padding-bottom: 5rem;\r\n    }\r\n  }\r\n`;\r\n\r\nconst PPresentation = ({\r\n  t,\r\n  loading,\r\n  hideSpinner,\r\n  downloadRef,\r\n  onDownloadClick,\r\n}) => {\r\n  return (\r\n    <PPresentationContainer>\r\n      <DownloadDescription id=\"desc_top\" t={t} />\r\n      <ResponsiveIframe hideSpinner={hideSpinner} loading={loading} />\r\n      <div className=\"download_container\">\r\n        <DownloadDescription id=\"desc_bottom\" t={t} />\r\n        <DownloadButton\r\n          t={t}\r\n          downloadRef={downloadRef}\r\n          onDownloadClick={onDownloadClick}\r\n        />\r\n      </div>\r\n      <div className={\"pprsenation_more\"}>\r\n        <Icon name=\"angle double down\" />\r\n      </div>\r\n    </PPresentationContainer>\r\n  );\r\n};\r\n\r\nPPresentation.propTypes = {\r\n  t: PropTypes.func.isRequired,\r\n  loading: PropTypes.bool.isRequired,\r\n  hideSpinner: PropTypes.func.isRequired,\r\n  downloadRef: PropTypes.oneOfType([\r\n    PropTypes.func,\r\n    PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\r\n  ]).isRequired,\r\n  onDownloadClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default PPresentation;\r\n","import PPresentation from \"./PPresentation\";\r\n\r\nexport default PPresentation;\r\n","import PPresentationContainer from \"./PPresentationContainer\";\r\n\r\nexport default PPresentationContainer;\r\n","import { useRef, useState } from \"react\";\r\nimport { isMobile } from \"react-device-detect\";\r\nimport PPresentation from \"../../../components/PPresentation\";\r\n\r\nconst PPresentationContainer = ({ t }) => {\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const downloadRef = useRef(null);\r\n\r\n  const hideSpinner = () => {\r\n    setLoading(false);\r\n  };\r\n\r\n  const onDownloadClick = () => {\r\n    if (isMobile) {\r\n      downloadRef.current.classList.remove(\"spinning_shuriken\");\r\n      void downloadRef.current.offsetWidth;\r\n      downloadRef.current.classList.add(\"spinning_shuriken\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <PPresentation\r\n      t={t}\r\n      loading={loading}\r\n      hideSpinner={hideSpinner}\r\n      downloadRef={downloadRef}\r\n      onDownloadClick={onDownloadClick}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PPresentationContainer;\r\n","import styled from \"styled-components\";\r\nimport { Image } from \"semantic-ui-react\";\r\nimport parse from \"html-react-parser\";\r\n\r\nimport PPButton from \"../../PPButton\";\r\n\r\nimport { COLOR } from \"../../../constants\";\r\n\r\nconst DownloadPNGButton = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  padding: 2rem 0;\r\n\r\n  .download_png_button {\r\n    font-size: 2rem;\r\n    padding: 1rem 1rem;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n  .download_icon {\r\n    width: 2rem;\r\n    margin-right: 1rem;\r\n  }\r\n  .download_button_description {\r\n    color: white;\r\n  }\r\n  @media only screen and (max-width: 1100px) {\r\n    .download_icon {\r\n      width: 3rem;\r\n      margin-right: 1rem;\r\n    }\r\n\r\n    .download_button_png_description {\r\n      font-size: 1.5rem;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 820px) and (orientation: landscape) {\r\n    .download_icon {\r\n      width: 1.5rem;\r\n    }\r\n    .download_button_png_description {\r\n      font-size: 1rem;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 768px) {\r\n    .download_icon {\r\n      width: 2rem;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 425px) {\r\n    .download_icon {\r\n      width: 1.5rem;\r\n    }\r\n    .download_button_png_description {\r\n      font-size: 1rem;\r\n    }\r\n  }\r\n\r\n  @media (hover: hover) and (pointer: fine) {\r\n    .download_png_button:hover .download_icon {\r\n      animation: loading 1s infinite;\r\n    }\r\n  }\r\n`;\r\n\r\nconst DownloadButton = ({ t, downloadRef, onDownloadClick }) => {\r\n  return (\r\n    <DownloadPNGButton>\r\n      <PPButton\r\n        className=\"download_png_button\"\r\n        backgroundColor={COLOR.png}\r\n        hoverBackgroundColor={COLOR.pngHovered}\r\n        color=\"white\"\r\n        onClick={onDownloadClick}\r\n        ref={downloadRef}\r\n      >\r\n        <Image src=\"/white_shuriken.png\" className=\"download_icon\" />\r\n        {parse(t(\"pngButton\"))}\r\n      </PPButton>\r\n      <div className=\"download_button_png_description\">\r\n        {parse(t(\"pngDetail\"))}\r\n      </div>\r\n    </DownloadPNGButton>\r\n  );\r\n};\r\n\r\nexport default DownloadButton;\r\n","import DownloadButton from \"./DownloadButton\";\r\n\r\nexport default DownloadButton;\r\n","import styled from \"styled-components\";\r\nimport { Divider, Image, Card } from \"semantic-ui-react\";\r\n\r\nimport Masonry from \"react-masonry-css\";\r\n\r\nconst MessageItemContainer = styled.div`\r\n  .message_card {\r\n    position: relative !important;\r\n    margin-top: 15px !important;\r\n  }\r\n  .message_card_icon {\r\n    position: absolute !important;\r\n    z-index: 100;\r\n    top: -14px;\r\n    width: 40px;\r\n    right: -11px;\r\n    filter: drop-shadow(2px 2px 1px darkgray);\r\n  }\r\n  @media only screen and (max-width: 425px) {\r\n    padding: 0 1rem;\r\n  }\r\n`;\r\n\r\nconst modSeq = (a, b) => {\r\n  return (a % b) + 1;\r\n};\r\nconst breakpoints = {\r\n  default: 3,\r\n  1200: 2,\r\n  700: 1,\r\n};\r\n\r\nconst MessageItems = ({ data }) => {\r\n  return (\r\n    <Masonry\r\n      breakpointCols={breakpoints}\r\n      className=\"my-masonry-grid\"\r\n      columnClassName=\"my-masonry-grid_column\"\r\n    >\r\n      {data.map(({ message, user, image }, i) => (\r\n        <MessageItemContainer data-aos=\"fade-up\" key={i}>\r\n          <Card className={\"message_card\"} centered>\r\n            <img\r\n              alt=\"icon\"\r\n              className={\"message_card_icon\"}\r\n              src={`/icon/pp_${modSeq(i, 10)}.png`}\r\n            />\r\n            {image && <Image src={image} wrapped ui={false} />}\r\n            <Card.Content>\r\n              <Card.Description>{message}</Card.Description>\r\n              <Divider />\r\n              <Card.Header textAlign=\"right\">{user}</Card.Header>\r\n            </Card.Content>\r\n          </Card>\r\n        </MessageItemContainer>\r\n      ))}\r\n    </Masonry>\r\n  );\r\n};\r\n\r\nexport default MessageItems;\r\n","import MessageItems from \"./MessageItems\";\r\n\r\nexport default MessageItems;\r\n","export default __webpack_public_path__ + \"static/media/pptile.47c2a38c.png\";","import PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { Container, Header, Divider } from \"semantic-ui-react\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport parse from \"html-react-parser\";\r\n\r\nimport ShurikenSpinner from \"../ShurikenSpinner\";\r\n\r\nimport DownloadButton from \"./DownloadButton\";\r\nimport MessageItems from \"./MessageItems\";\r\n\r\nimport backgroundImg from \"../../assets/images/pptile.png\";\r\n\r\nconst MessageBoardContainer = styled.div`\r\n  background-image: url(${backgroundImg});\r\n  background-attachment: fixed;\r\n  background-size: 150px;\r\n  background-repeat: repeat;\r\n  padding-top: 2rem;\r\n  .message_board {\r\n    padding-bottom: 3rem;\r\n  }\r\n  .message_board_header {\r\n    background: white;\r\n    border: 3px;\r\n    border-radius: 24px 24px 24px 24px;\r\n    padding: 1rem;\r\n  }\r\n  .message_board_text {\r\n    font-weight: 900;\r\n    margin-bottom: 0;\r\n  }\r\n  .messageboard_loader {\r\n    position: relative;\r\n    display: flex !important;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 90px;\r\n  }\r\n`;\r\n\r\nconst PPMessageBoard = ({\r\n  t,\r\n  data,\r\n  hasMore,\r\n  messageRef,\r\n  fetchMore,\r\n  onDownloadClick,\r\n  downloadRef,\r\n}) => {\r\n  return (\r\n    <MessageBoardContainer ref={messageRef}>\r\n      <Container className=\"message_board\">\r\n        <Container className={\"message_board_header\"}>\r\n          <Header textAlign=\"center\">\r\n            <Header.Content as=\"h1\" className={\"message_board_text\"}>\r\n              {parse(t(\"messageHeader\"))}\r\n            </Header.Content>\r\n            <Divider />\r\n            <Header.Subheader>{parse(t(\"messageSubHeader\"))}</Header.Subheader>\r\n          </Header>\r\n        </Container>\r\n        <DownloadButton\r\n          t={t}\r\n          onDownloadClick={onDownloadClick}\r\n          downloadRef={downloadRef}\r\n        />\r\n        <InfiniteScroll\r\n          style={{ overflow: \"hidden\" }}\r\n          dataLength={data.length}\r\n          next={fetchMore}\r\n          hasMore={hasMore}\r\n          loader={\r\n            <Container className=\"messageboard_loader\">\r\n              <ShurikenSpinner />\r\n            </Container>\r\n          }\r\n        >\r\n          <MessageItems data={data} />\r\n        </InfiniteScroll>\r\n      </Container>\r\n    </MessageBoardContainer>\r\n  );\r\n};\r\n\r\nPPMessageBoard.propTypes = {\r\n  t: PropTypes.func.isRequired,\r\n  data: PropTypes.array,\r\n  hasMore: PropTypes.bool.isRequired,\r\n  messageRef: PropTypes.oneOfType([\r\n    PropTypes.func,\r\n    PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\r\n  ]).isRequired,\r\n  downloadRef: PropTypes.oneOfType([\r\n    PropTypes.func,\r\n    PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\r\n  ]).isRequired,\r\n  fetchMore: PropTypes.func.isRequired,\r\n  onDownloadClick: PropTypes.func.isRequired,\r\n};\r\n\r\nPPMessageBoard.defaultProps = {\r\n  data: [],\r\n};\r\n\r\nexport default PPMessageBoard;\r\n","import PPMessageBoard from \"./PPMessageBoard\";\r\n\r\nexport default PPMessageBoard;\r\n","import PPMessageBoardContainer from \"./PPMessageBoardContainer\";\r\n\r\nexport default PPMessageBoardContainer;\r\n","import { useEffect, useMemo, useRef, useState } from \"react\";\r\nimport { GoogleSpreadsheet } from \"google-spreadsheet\";\r\nimport { isMobile } from \"react-device-detect\";\r\n\r\nimport PPMessageBoard from \"../../../components/PPMessageBoard\";\r\n\r\nimport {\r\n  SPREADSHEET_ID,\r\n  SHEET_ID,\r\n  GOOGLE_API_KEY,\r\n  LIMIT,\r\n} from \"../../../constants\";\r\n\r\nconst PPMessageBoardContainer = ({ t }) => {\r\n  const messageRef = useRef(null);\r\n  const sheetRef = useRef(null);\r\n  const downloadRef = useRef(null);\r\n\r\n  const [data, setData] = useState([]);\r\n  const [offset, setOffset] = useState(0);\r\n  const [hasMore, setHasMore] = useState(true);\r\n\r\n  const doc = useMemo(() => new GoogleSpreadsheet(SPREADSHEET_ID), []);\r\n\r\n  useEffect(() => {\r\n    if (isMobile) {\r\n      messageRef.current.style.backgroundAttachment = \"scroll\";\r\n    }\r\n\r\n    const fetchRows = async () => {\r\n      await doc.useApiKey(GOOGLE_API_KEY);\r\n      await doc.loadInfo();\r\n      sheetRef.current = doc.sheetsById[SHEET_ID];\r\n      const rows = await sheetRef.current.getRows({ limit: LIMIT, offset: 0 });\r\n      setData(rows);\r\n    };\r\n    fetchRows();\r\n  }, [doc]);\r\n\r\n  const fetchMore = async () => {\r\n    if (data.length % LIMIT !== 0) {\r\n      setHasMore(false);\r\n    }\r\n    sheetRef.current = doc.sheetsById[SHEET_ID];\r\n    const rows = await sheetRef.current.getRows({\r\n      limit: LIMIT,\r\n      offset: offset + LIMIT,\r\n    });\r\n    setOffset(offset + LIMIT);\r\n    setData([...data, ...rows]);\r\n  };\r\n\r\n  const onDownloadClick = () => {\r\n    if (isMobile) {\r\n      downloadRef.current.classList.remove(\"spinning_shuriken\");\r\n      void downloadRef.current.offsetWidth;\r\n      downloadRef.current.classList.add(\"spinning_shuriken\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <PPMessageBoard\r\n      t={t}\r\n      data={data}\r\n      hasMore={hasMore}\r\n      fetchMore={fetchMore}\r\n      messageRef={messageRef}\r\n      downloadRef={downloadRef}\r\n      onDownloadClick={onDownloadClick}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PPMessageBoardContainer;\r\n","import PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { Icon } from \"semantic-ui-react\";\r\n\r\nimport PPButton from \"../PPButton\";\r\n\r\nconst BackToTopButton = styled(PPButton)`\r\n  display: none;\r\n  position: fixed;\r\n  bottom: 20px;\r\n  right: 20px;\r\n  z-index: 500;\r\n  box-shadow: 0px 0px 12px 2px grey;\r\n  width: 50px;\r\n  height: 50px;\r\n  padding: 10px 16px;\r\n  font-size: 20px;\r\n  line-height: 1.33;\r\n  border-radius: 25px;\r\n`;\r\n\r\nconst PPBackToTop = ({ returnToTop, bttRef }) => {\r\n  return (\r\n    <BackToTopButton\r\n      onClick={returnToTop}\r\n      circular={true}\r\n      color=\"white\"\r\n      backgroundColor=\"lightgrey\"\r\n      ref={bttRef}\r\n    >\r\n      <Icon name=\"chevron up\" fitted />\r\n    </BackToTopButton>\r\n  );\r\n};\r\n\r\nPPBackToTop.propTypes = {\r\n  returnToTop: PropTypes.func.isRequired,\r\n  bttRef: PropTypes.oneOfType([\r\n    PropTypes.func,\r\n    PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\r\n  ]).isRequired,\r\n};\r\n\r\nexport default PPBackToTop;\r\n","import PPBackToTop from \"./PPBackToTop\";\r\n\r\nexport default PPBackToTop;\r\n","import PPBackToTop from \"./PPBackToTopContainer\";\r\n\r\nexport default PPBackToTop;\r\n","import { useEffect, useRef } from \"react\";\r\nimport PPBackToTop from \"../../../components/PPBackToTop\";\r\n\r\nconst PPBackToTopContainer = () => {\r\n  const bttRef = useRef(null);\r\n\r\n  const scrollToAppear = (mybutton) => {\r\n    if (mybutton) {\r\n      if (\r\n        document.body.scrollTop > 20 ||\r\n        document.documentElement.scrollTop > 20\r\n      ) {\r\n        mybutton.style.display = \"block\";\r\n      } else {\r\n        mybutton.style.display = \"none\";\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.onscroll = () => {\r\n      scrollToAppear(bttRef.current);\r\n    };\r\n  });\r\n\r\n  const returnToTop = () => {\r\n    document.body.scrollTop = 0;\r\n    document.documentElement.scrollTop = 0;\r\n  };\r\n\r\n  return <PPBackToTop returnToTop={returnToTop} bttRef={bttRef} />;\r\n};\r\n\r\nexport default PPBackToTopContainer;\r\n","import styled from \"styled-components\";\r\nimport { Container } from \"semantic-ui-react\";\r\n\r\nimport parse from \"html-react-parser\";\r\n\r\nconst FooterContainer = styled(Container)`\r\n  padding: 3rem;\r\n`;\r\n\r\nconst Footer = ({ t }) => {\r\n  return (\r\n    <FooterContainer textAlign=\"center\">{parse(t(\"footer\"))}</FooterContainer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import Footer from \"./Footer\";\r\n\r\nexport default Footer;\r\n","import { withNamespaces } from \"react-i18next\";\r\n\r\nimport PPCongrats from \"./PPCongrats\";\r\nimport PPresentation from \"./PPresentation\";\r\nimport PPMessageBoard from \"./PPMessageBoard\";\r\nimport PPBackToTop from \"./PPBackToTop\";\r\n\r\nimport Footer from \"../../components/Footer\";\r\n\r\nconst Main = ({ t }) => {\r\n  return (\r\n    <div>\r\n      <PPCongrats t={t} />\r\n      <PPresentation t={t} />\r\n      <PPMessageBoard t={t} />\r\n      <PPBackToTop />\r\n      <Footer t={t} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withNamespaces()(Main);\r\n","import Main from \"./containers/Main\";\r\n\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  return <Main />;\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport \"./i18n\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport AOS from \"aos\";\r\nimport \"aos/dist/aos.css\";\r\n\r\nimport \"semantic-ui-less/semantic.less\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nAOS.init();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}